<tool id="canonical_tRNA_lattice" name="Plot canonical tRNA dataframe" version="0.0.1">
	<description>Using R lattice package</description>
        <requirements>
          <requirement type="package" version="3.1.2">R</requirement>
          <requirement type="package" version="2.14">biocbasics</requirement>
        </requirements>
	<command interpreter="bash">Rscript $Rplotter</command>
	<inputs>
		<param name="input" type="data" format="tabular" label="R Plot from this tabular input"/>
		<param name="title" type="text" size="15" value="Main Title" label="Main Titles"/>
                <param name="xlabel" type="text" size="15" value="Coordinates" label="x axis label"/>
                <param name="ylabel" type="text" size="15" value="number of reads" label="y axis label"/>
                <param name="normflag" type="select" label="How to represent read count values">
                   <option value="straight">straight</option>
                   <option value="log">log2 of read counts</option>
                </param>
	</inputs>


  <configfiles>
    <configfile name="Rplotter">
      ## Setup R error handling to go to stderr
      options( show.error.messages=F, 
               error = function () { cat( geterrmessage(), file=stderr() ); q( "no", 1, F ) } )
      data = read.delim("${input}", header=TRUE)
      data\$barcol = factor(ifelse((data[,4] %in% 15:18), "green", ifelse( (data[,4] %in% 19:22), "blue", ifelse( (data[,4] %in% 23:26), "red", "black" ) ) ), levels = c("green", "blue", "red", "black") )

      data\$miRtag =  do.call  ("paste", c( c(data["gene"], " #", data["total_count"]) , sep="") )



      library(lattice)
      ## Open output PDF file
      pdf( "${output}", paper="special", height=11.69, width=8.2677 )
      norm_decision = "${normflag}"
      if (norm_decision=="straight") {
        xyplot(count~offset | miRtag, data= data, type="h", groups = barcol, col=c("green", "blue", "red", "black"), lwd=2,
               cex=1, par.strip.text=list(cex=1), strip=strip.custom(which.given=1, bg="lightblue"), xlab="${xlabel}", ylab="${ylabel}", main = "${title} (straight read counts)")
      }
      if (norm_decision=="log") {
        xyplot(log(count,base=2)~offset | miRtag, data= data, type="h", groups = barcol, col=c("green", "blue", "red", "black"), lwd=2,
               cex=1, par.strip.text=list(cex=1), strip=strip.custom(which.given=1, bg="lightblue"), xlab="${xlabel}", ylab="${ylabel}",  main = "${title} (log2 of read counts)")
      }

      ## Close the PDF file
      devname = dev.off() 
    </configfile>
  </configfiles>




	<outputs>
		<data name="output" format="pdf"/>
	</outputs>
	<help>

**What it does**

temptative R plotter


	</help>
</tool>
