<tool id="scran_normalize" name="scran_normalize" version="0.1.0">
    <description>Normalize raw counts expression values using deconvolution size factors</description>
    <requirements>
        <requirement type="package" version="1.6.2">r-optparse</requirement>
        <requirement type="package" version="1.12.1=r36he1b5a44_0">bioconductor-scran</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Tool exception" />
    </stdio>
    <command detect_errors="exit_code"><![CDATA[ 
        Rscript $__tool_directory__/scran-normalize.R 
            --data '$input'
            --sep '$input_sep' 
            #if $metacell.cluster == "Yes":
                --cluster
                --method '$metacell.method'
                --size '$metacell.size'
            #end if
            -o ${output}
]]></command>
    <inputs>
        <param name="input" type="data" format="txt,tabular" label="Raw counts of expression data" help = "Must have an header"/>
        <param name="input_sep" type="select" label="Input column separator">
            <option value="tab" selected="true">Tabulation</option>
            <option value=",">Comma</option>
        </param>
        <conditional name="metacell">
            <param name="cluster" type="select" label = "Do you want to cluster cells ?" help="Perform scaling method on metacell, see Details">
                <option value="Yes">Yes</option>
                <option value="No" selected="true">No</option>
            </param>
            <when value="Yes">
                <param name="method" type="select" label="Clustering method">
                    <option value="hclust" selected="true">hclust</option>
                    <option value="igraph">igprah</option>
                </param>
                <param name="size" type="integer" value="100" label="Minimum size of each cluster"/>
            </when>
            <when value="No"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="output" format="tabular" label="Normalized Log counts of ${on_string}">
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="counts.tab" ftype="tabular"/>
            <output name="output" file="logcounts.tab" ftype="tabular"/>
        </test>
    </tests>
    <help>

**What it does**

Takes a raw count expression matrix and returns a table of normalized expression values.

Cell-specific biases are normalized using the computeSumFactors method, which implements the
deconvolution strategy for scaling normalization (A. T. Lun, Bach, and Marioni 2016).

This computes size factors that are used to scale the counts in each cell. The assumption is that 
most genes are not differentially expressed (DE) between cells, such that any differences in 
expression across the majority of genes represents some technical bias that should be removed.

You can apply this method on cell cluster instead of your all set of cells by using quickCluster.
It defines cluster using distances based on Spearman correlation on counts between cells, there is two available methods : 

  - *hclust* : hierarchical clustering on the distance matrix and dynamic tree cut.
  - *igraph* : constructs a Shared Nearest Neighbor graph (SNN) on the distance matrix and identifies highly connected communities.


Note: First header row must NOT start with a '#' comment character

    </help>
    <citations>
        <citation type="bibtex">
            @Article{,
                author = {Aaron T. L. Lun and Davis J. McCarthy and John C. Marioni},
                title = {A step-by-step workflow for low-level analysis of single-cell RNA-seq data with Bioconductor},
                journal = {F1000Res.},
                year = {2016},
                volume = {5},
                pages = {2122},
                doi = {10.12688/f1000research.9501.2},
            }
        </citation>
    </citations>
</tool>
