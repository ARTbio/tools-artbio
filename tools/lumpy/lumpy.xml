<tool id="lumpy" name="lumpy-sv" version="0.1">
    <description>find structural variants</description>
    <version_command>lumpy --version</version_command>
    <requirements>
        <requirement type="package" version="0.2.12">lumpy-sv</requirement>
        <requirement type="package" version="1.3.1">samtools</requirement>
        <requirement type="package" version="1.11.2">numpy</requirement>
    </requirements>
    <command><![CDATA[
        ln -f -s "$input_file" input.bam &&
        samtools view -b -F 1294 input.bam > "input.discordants.unsorted.bam" &&
        samtools view -h input.bam | python $__tool_directory__/extractSplitReads_BwaMem.py -i stdin | samtools view -Sb - > "input.splitters.unsorted.bam" &&
        samtools sort input.discordants.unsorted.bam > input.discordants.bam &&
        samtools sort input.splitters.unsorted.bam > input.splitters.bam &&
        samtools view -r readgroup input.bam |tail -n +100000 |python $__tool_directory__/pairend_distro.py -r 101 -X 4 -N 10000 -o input.lib.histo &&
        lumpy -mw 4 -tt 0 
            -pe id:input.bam,bam_file:input.discordants.bam,histo_file:input.lib.histo,mean:450,stdev:50,read_length:151,min_non_overlap:101,discordant_z:5,back_distance:10,weight:1,min_mapping_threshold:20 
            -sr id:input.bam,bam_file:input.splitters.bam,back_distance:10,weight:1,min_mapping_threshold:20 > output.vcf &&
        mv input.discordants.bam $discordants &&
        mv input.splitters.bam $splits &&
        mv input.lib.histo $histogram &&
        mv output.vcf $vcf_call &&
        rm input.discordants.unsorted.bam input.splitters.unsorted.bam
    ]]></command>
    <!-- basic error handling -->
    <stdio>
        <exit_code range="1:" level="fatal" description="Tool exception" />
    </stdio>

    <inputs>
        <param format="bam" name="input_file" type="data" label="One BAM alignment files produced by BWA"/>
    </inputs>

    <outputs>
        <data format="tabular" name="histogram" type="data" label="${input_file.element_identifier} Fragment size distribution"/>
        <data format="bam" name="splits" type="data" label="${input_file.element_identifier} Split Reads (Bam format)"/>
        <data format="bam" name="discordants" type="data" label="${input_file.element_identifier} Discordant Pairs (Bam format)"/>
        <data format="vcf" name="vcf_call" type="data" label="${input_file.element_identifier} Variant Calling (vcf format)"/>
    </outputs>

    <tests>
        <test>
            <param name="input_file" value="input.bam" ftype="bam"/>
            <output name="vcf_call" file="output.vcf" ftype="vcf"/>
        </test>
    </tests>

    <help>
        Some help required
    </help>

    <citations>
    <citation type="doi">10.1186/gb-2014-15-6-r84</citation>
  </citations>
</tool>
