<tool id="high_dimensions_visualisation" name="Generate PCA, tSNE and HCPC" version="0.4.2">
    <description>from highly dimensional expression data</description>
    <requirements>
        <requirement type="package" version="1.3.2=r3.3.2_0">r-optparse</requirement>
        <requirement type="package" version="1.39=r3.3.2_0">r-factominer</requirement>
        <requirement type="package" version="1.0.5=r3.3.2_0">r-factoextra</requirement>
        <requirement type="package" version="0.13=r3.3.2_0">r-rtsne</requirement>
        <requirement type="package" version="2.2.1=r3.3.2_0">r-ggplot2</requirement>
        <requirement type="package" version="0.4.1=r3.3.2_0">r-ggfortify</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Tool exception" />
    </stdio>
    <command detect_errors="exit_code"><![CDATA[ 
        Rscript $__tool_directory__/high_dim_visu.R 
            --data '$input'
            --sep '$input_sep'
            --colnames '$input_header'
            #if $labels == "yes":
                --labels 'TRUE'
            #else
                --labels 'FALSE'
            #end if
            --visu_choice '$visualisation.visu_choice'
            #if $visualisation.visu_choice == "tSNE":
                --seed '$visualisation.seed'
                --perp '$visualisation.perp'
                --theta '$visualisation.theta'
            #end if
            #if $visualisation.visu_choice == "HCPC":
                --npc '$visualisation.npc'
                --ncluster '$visualisation.ncluster'
            #end if
            --pdf_out '$pdf_out'
]]></command>
    <inputs>
        <param name="input" type="data" format="txt" label="expression data"/>
        <param name="input_sep" type="select" label="Input column separator">
            <option value="tab" selected="true">Tabs</option>
            <option value=",">Comma</option>
        </param>
        <param name="input_header" type="select" label="Consider first line of input file as header?">
            <option value="TRUE" selected="true">Yes</option>
            <option value="FALSE">No</option>
        </param>
        <param name="labels" type="select" label="Add sample labels to scatter plot" >
            <option value="no" selected="true">No Labels</option>
            <option value="yes" >Label points</option>
        </param>
        <conditional name="visualisation">
            <param label="Choose visualisation method" name="visu_choice" type="select">
                <option value="PCA" selected="True">PCA</option>
                <option value="HCPC">HCPC</option>
                <option value="tSNE">t-SNE</option>
            </param>
            <when value="tSNE">
                <param name="seed" value="49.0" type="float" label="Seed value for reproducibility of t-SNE" help="Set to 49 as default" />
                <param name="perp" value="10.0" type="float" label="perplexity (t-SNE)" help="should be less than ((nbr observations)-1)/3" /> 
                <param name="theta" value="1.0" type="float" label="theta (t-SNE)"/>
            </when>
            <when value="HCPC">
                <param name="npc" value="5" type="integer" label="Number of principal components to keep"
                       help="The number of dimensions which are kept for HCPC analysis (default=5)" />
                <param name="ncluster" value="-1" type="integer" label="Number of clusters in Hierar. Clustering"
                       help="nb.clust, the number of clusters to consider in the hierarchical clustering. (default : -1, let HCPC to optimize the number)" />
            </when>
            <when value="PCA">
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="pdf_out" format="pdf" label="plots from ${tool.name} on ${on_string}" />
    </outputs>
    <tests>
        <!-- test HCPC -->
        <test>
            <param name="input" value="cpm_input.tsv" ftype="txt"/>
            <param name="labels" value="yes" />
            <param name="visu_choice" value="HCPC" />
            <param name="npc" value="5"/>
            <param name="ncluster" value="-1"/>
            <output name="pdf_out" file="hcpc.labels.pdf" ftype="pdf"/>
        </test>
        <test>
            <param name="input" value="cpm_input.tsv" ftype="txt"/>
            <param name="labels" value="no" />
            <param name="npc" value="5"/>
            <param name="ncluster" value="-1"/>
            <param name="visu_choice" value="HCPC" />
            <output name="pdf_out" file="hcpc.nolabels.pdf" ftype="pdf"/>
        </test>
        <!-- test t-SNE -->
        <test>
            <param name="input" value="cpm_input.tsv" ftype="txt"/>
            <param name="labels" value="yes" />
            <param name="visu_choice" value="tSNE" />
            <param name="seed" value="49"/>
            <param name="perp" value="10"/>
            <param name="theta" value="1" />
            <output name="pdf_out" file="tsne.labels.pdf" ftype="pdf"/>
        </test>
        <test>
            <param name="input" value="cpm_input.tsv" ftype="txt"/>
            <param name="labels" value="no" />
            <param name="visu_choice" value="tSNE" />
            <param name="seed" value="49"/>
            <param name="perp" value="10"/>
            <param name="theta" value="1" />
            <output name="pdf_out" file="tsne.nolabels.pdf" ftype="pdf"/>
        </test>
        <!-- test PCA -->
        <test>
            <param name="input" value="cpm_input.tsv" ftype="txt"/>
            <param name="labels" value="yes" />
            <param name="visu_choice" value="PCA" />
            <output name="pdf_out" file="pca.labels.pdf" ftype="pdf"/>
        </test>
        <test>
            <param name="input" value="cpm_input.tsv" ftype="txt"/>
            <param name="labels" value="no" />
            <param name="visu_choice" value="PCA" />
            <output name="pdf_out" file="pca.nolabels.pdf" ftype="pdf"/>
        </test>
    </tests>
    <help>

**What it does**

Takes a raw count expression matrix and returns a table of normalized expression values.

Normalization can be:

- CPM (Counts Per Million) are obtained by dividing counts by the library counts sum and multiplying the results by a million.
- RPK (Reads Per Kilobases) are obtained by dividing read counts by gene lengths (expressed in kilo-nucleotides).
- TPM (Transcripts Per Million) are obtained by dividing RPK values by the sum of all RPK values in a sample and multiplying the results by 1 million.

RPK and TPM require a two-column correspondance table gene_name - gene length where the length is specified in nucleotide. Both these metrics are relevant only for sequencing of full length RNAs.

Note: do not comment you header line if you have header line in you tabular input (ie do not start the header line with a '#' character)

Computed values may be log-transformed (log2([CPM or RPK or TPM]+1))

    </help>
</tool>
