<tool id="filter_single_cell_expression_matrix" name="Filter single cell expression matrix" version="0.2.0">
  <description>from raw counts single cell RNAseq expression values"</description>
  <requirements>
      <requirement type="package" version="2.3.1=r3.4.1_0">r-seurat</requirement>
      <requirement type="package" version="1.6.0=r3.4.1_0">bioconductor-scater</requirement>
      <requirement type="package" version="1.0.0=r3.4.1_0">bioconductor-singlecellexperiment</requirement>
      <requirement type="package" version="1.6.0=r341_0">r-optparse</requirement>
   </requirements>
   <stdio>
      <exit_code range="1:" level="fatal" description="Tool exception" />
   </stdio>
   <command detect_errors="exit_code"><![CDATA[

Rscript $__tool_directory__/filter_single_cell_expression_matrix.R
    -f $file
    -c $file_header
    -s $file_sep
    -m $option.is_mito
    #if $option.is_mito == "TRUE":
        --header_mito $option.header_mito
    #end if
    -p $method.package
    #if $method.package == "scater":
        -g $method.feature_removing.gene_filter
        #if $method.feature_removing.gene_filter == "low.abundances":
            --min_cells $method.feature_removing.min_counts
        #end if
        #if $method.feature_removing.gene_filter == "min.cells":
            --min_cells $method.feature_removing.min_cells
        #end if
    #end if
    #if $method.package == "Seurat":
        --min_genes $method.min_genes
        --min_cells $method.min_cells
    #end if
    --output_pdf $output_plot
    --output_matrix $output_matrix

]]></command>
   <inputs>
      <param name="file" type="data" format="txt" label="Raw counts of expression data"/>
      <param name="file_sep" type="select" label="Input column separator">
         <option value="tab" selected="true">Tabs</option>
         <option value=",">Commas</option>
         <option value=" ">Whitespaces</option>
         <option value=".">Dots</option>
         <option value="_">Underscores</option>
         <option value="-">Dashes</option>
   </param>
   <param name="file_header" type="select" label="Consider first line of input file as header?">
      <option value="TRUE" selected="true">Yes</option>
      <option value="FALSE">No</option>
   </param>
   <conditional name="option">
      <param name="is_mito" type="select" label="Do you want to remove cells that detect more than 20% of mitochondrial genes ? (only applicable if mitochondrial genes are in the expression data)">
         <option value="FALSE" selected="true">No</option>
         <option value="TRUE">Yes</option>
      </param>
      <when value="TRUE">
         <param name="header_mito" type="text" label="Regular expression for selection of mitochondrial genes"/>
      </when>
      <when value="FALSE">
      </when>
   </conditional>
   <conditional name="method">
      <param name="package" type="select" label="Which package/method do you want to use ?">
         <option value="scater" selected="true">scater</option>
         <option value="Seurat">Seurat</option>
      </param>
      <when value="scater">
         <conditional name="feature_removing">
            <param name="gene_filter" type="select" label="How do you want to filter out genes ?">
               <option value="low.abundances" selected="true">low abundances genes relative to library size</option>
               <option value="min.cells">genes that aren't detected in a fraction of cells</option>
            </param>
            <when value="low.abundances">
               <param name="min_counts" type="integer" value="1" label="Keep all genes with an average count equal or higher than:"/>
            </when>
            <when value="min.cells">
               <param name="min_cells" type="integer" value="3" label="Keep all genes that are detected in at least n cells:"/>
            </when>
        </conditional>
      </when>
      <when value="Seurat">
         <param name="min_genes" type="integer" value="5" label="Keep all cells that detect at least n genes:"/>
         <param name="min_cells" type="integer" value="3" label="Keep all genes that are detected in at least n cells:"/>
      </when>
   </conditional>
   </inputs>
   <outputs>
         <data name="output_plot" format="pdf" label="PDF plots from ${on_string}"/>
         <data name="output_matrix" format="tabular" label="Filtered expression matrix from ${on_string}"/>
   </outputs>
   <tests>
      <test>
         <param name="file" value="counts_no_header.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="FALSE"/>
         <param name="is_mito" value="FALSE"/>
         <param name="package" value="scater"/>
         <param name="gene_filter" value="low.abundances"/>
         <param name="min_cells" value="1"/>
         <output name="output_plot" file="counts_no_header_scater_low.abundances_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_no_header_scater_low.abundances_filtered.tab" ftype="tabular"/>
      </test>
      <test>
         <param name="file" value="counts.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="TRUE"/>
         <param name="is_mito" value="FALSE"/>
         <param name="package" value="scater"/>
         <param name="gene_filter" value="low.abundances"/>
         <param name="min_cells" value="1"/>
         <output name="output_plot" file="counts_scater_low.abundances_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_scater_low.abundances_filtered.tab" ftype="tabular"/>
      </test>
      <test>
         <param name="file" value="counts.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="TRUE"/>
         <param name="is_mito" value="FALSE"/>
         <param name="package" value="scater"/>
         <param name="gene_filter" value="min.cells"/>
         <param name="min_cells" value="3"/>
         <output name="output_plot" file="counts_scater_min.cells_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_scater_min.cells_filtered.tab" ftype="tabular"/>
    </test>

    <test>
         <param name="file" value="counts.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="TRUE"/>
         <param name="is_mito" value="FALSE"/>
         <param name="package" value="Seurat"/>
         <param name="min_genes" value="10"/>
         <param name="min_cells" value="3"/>
         <output name="output_plot" file="counts_Seurat_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_Seurat_filtered.tab" ftype="tabular"/>
    </test>
    <test>
         <param name="file" value="counts_with_mito.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="TRUE"/>
         <param name="is_mito" value="TRUE"/>
         <param name="header_mito" value="MT-"/>
         <param name="package" value="scater"/>
         <param name="gene_filter" value="low.abundances"/>
         <param name="min_cells" value="1"/>
         <output name="output_plot" file="counts_with_mito_scater_low.abundances_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_with_mito_scater_low.abundances_filtered.tab" ftype="tabular"/>
    </test>
    <test>
         <param name="file" value="counts_with_mito.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="TRUE"/>
         <param name="is_mito" value="TRUE"/>
         <param name="header_mito" value="MT-"/>
         <param name="package" value="scater"/>
         <param name="gene_filter" value="min.cells"/>
         <param name="min_cells" value="3"/>
         <output name="output_plot" file="counts_with_mito_scater_min.cells_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_with_mito_scater_min.cells_filtered.tab" ftype="tabular"/>
    </test>
    <test>
         <param name="file" value="counts_with_mito.tab" ftype="tabular"/>
         <param name="file_sep" value="tab"/>
         <param name="file_header" value="TRUE"/>
         <param name="is_mito" value="TRUE"/>
         <param name="header_mito" value="MT-"/>
         <param name="package" value="Seurat"/>
         <param name="min_genes" value="10"/>
         <param name="min_cells" value="3"/>
         <output name="output_plot" file="counts_with_mito_Seurat_filter_plots.pdf" ftype="pdf"/>
         <output name="output_matrix" file="counts_with_mito_Seurat_filtered.tab" ftype="tabular"/>
    </test> 
   </tests>
   <help>

**What it does**

Filter_single_cell_expression_matrix takes a tabular table of raw read counts, each column corresponding to a cell and each row corresponding to a
gene, and returns (1) a PDF with quality controls plots (like the distribution of library sizes or expressed genes by cell, frequency of 
expression or the most expressed genes) and (2) a filtered table of counts.

You can filter out low quality cells from your raw expression table :

- Based on expression level of mitochondrial genes (i.e. genes mapped to the mitochondrial chromosome) :

    - Using R package scater: remove cells that detect mitochondrial genes 3 times higher than the median of all cells
    - Using R package Seurat: if cells expressed more than 20% of mitochondrial genes, they are removed.

The percentage of mitochondrial genes is often used as quality control metric because a highly expressed mtRNA can be the signature of a broken 
cell (Ilicic et al. (2016)). To estimate the quality of a library, we use the following ratio:
Number of count from mitchondrial genome / Number total of count. 


- Using R package scater : search cells with low library size and few detected genes based on the deviation from the median of all cel$

- Using R package Seurat : Remove all cells that detected at least n genes.

Also you can filter out low quality genes from your raw expression table :

- Using R package scater :

    - Remove all genes that aren't detected in at least n cells
    - Filter out genes based on its average count (which is adjust for library size between cells). It is more stringent.

- Using R package Seurat : Remove all genes that aren't detected in at least n cells.


**Inputs**

The following table gives an example of the tabular input mandatory to the tool :
Note that the first line show cell identifiers and table report the expression of xx gene (aka xx lines):


<![CDATA[

AGTCAGACTAGAGAAGTCCAGATTTCAC	AGTCTACTTGCATG	AGTGTTCTATAAGG	AGTGTTCTCACTTT	AGTTCTTGAAGCCT	ATAAACACAGTGCT	ATAACCCTGTTGGT	ATAATCGAGCTGAT	ATACCACTCGTACA  

MALAT1	34	78	45	86	12	46	72	76	33	19  

TMSB4X	32	33	109	27	46	25	31	43	11	46  

B2M	53	64	93	21	10	40	33	33	18	15  

RPL10	35	19	36	24	35	20	16	24	32	32  

RPL13	26	23	37	17	28	12	32	24	18	56  

RPL13A	16	32	38	24	21	10	18	30	19	25  

FTL	2	4	175	6	101	6	31	2	1	54  

RPS2	17	20	32	8	35	10	23	20	12	24  

RPS6	57	20	28	15	25	14	24	29	13	17  

FTH1	6	7	151	2	22	5	9	7	4	45  

RPS18	9	25	19	16	17	8	21	26	9	19  

RPL11	19	15	30	14	21	7	13	15	8	64  

RPL32	14	16	30	15	30	10	15	17	13	22  

RPS3	9	19	12	12	12	11	16	18	4	11  

RPL19	16	16	27	10	70	11	16	14	11	17  

MT-ND1	2	0	5	1	6	4	6	3	2	5  

MT-ND2	4	4	15	2	0	1	3	9	0	8  

MT-CO1	11	3	52	10	9	14	11	9	9	22  

MT-CO2	4	5	35	8	5	2	7	10	2	7  

MT-ATP8	0	0	0	0	0	0	0	0	0	0  



]]>

**Outputs**

The first output given by filter_single_expression_matrix is a PDF with several plots but it differs along with the chosen parameters.

If you choose Seurat method :
You will get 3 different plots :

- Violin plots representing  number of Genes detected, the number of UMI (and if you used mitochondrial genome as quality control : percentage of mitochondrial genes) 
- The distribution of UMI per cell
- The distribution of gene detected per cell


If you choose scater method :

- The distribution of log(UMI per cell)
- The distribution of log(gene detected per cell)
- The frequency of expression (i.e the number of cells with non zero expression) against the mean expression
- The top 50 of mostly expressed genes (or less than 50 if you have less than 50 genes in your dataset)

If you used mitochondrial genome as quality control you will get another plot after the first two plots:
- The distribution of counts of mitochondrial genes

If you choose to filter genes by their abundance in cell you will have two other plots :
- A smoothed version of a scatter plot of the log10(average counts of genes) against the number of cells that detected them.
- The distribution of log10(average count of genes) where the cut off of minimum count is visualized as a red dotted line (aka all genes below this threshold will be removed)

The second output is a filtered expression matrix with the same format as the input dataset but with less rows or/and columns unless you have a dataset with a good quality !


   </help>
   <citations>
        <citation type="doi">10.1101/164889</citation>
        <citation type="doi">10.1093/bioinformatics/btw777</citation>
        <citation type="bibtex">@Manual{,
    title = {SingleCellExperiment: S4 Classes for Single Cell Data},
    author = {Aaron Lun and Davide Risso},
    year = {2017},
    note = {R package version 1.0.0},
  }</citation>    
    </citations>
</tool>
