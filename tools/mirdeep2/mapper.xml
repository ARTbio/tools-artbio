<tool id="mapper" name="Mapping to reference" version="0.0.1">
	<description>Mapping using a bowtie index</description>
	<requirements>
		<requirement type="perl-module">mapper_wrapper.pl</requirement>
	</requirements>
	<stdio>
		<exit_code range="2:6" level="warning" description="Warning" />
	</stdio>
	<command interpreter="perl">
		./mapper.pl $reads
		#if $reads.extension.startswith("fastq"):
		-e

		#else if $reads.extension.startswith("fasta"):
		-c
		#end if

		#if str($convert_rna) == "convert_rna_true":
		-i
		#end if

		#if str($remove_non_atcgun) == "remove_non_atcgun_true":
		-j
		#end if

		#if str($adapter_seq) != "":
		-k $adapter_seq
		#end if

		#if str($discard_short_reads) != "":
		-l $discard_short_reads
		#end if

		#if str($collapse_reads) == "Collapsed Reads Fasta":
		-m
		#end if

		#if str($map_mismatch) == "map_mismatch_false":
		-q
		#end if

		#if str($map_threshold) != "":
		-r $map_threshold
		#end if

		-h -s $output_fasta -n

		-p
		#set $indexes = str($bowtie_index_name.extra_files_path) + "/" + str($bowtie_index_name).split('/')[-1]
		$indexes
		-t $output_arf
	</command>

	<inputs>
		<param format="fastq, fasta" name="reads" type="data" optional="false" label="Reads" help="Reads in fastq or fasta format"/>
		<param format="bowtie_html_index" name="bowtie_index_name" type="data" optional="false" label="Bowtie indexed reference" help="Select the bowtie-build run, NOT the fasta reference file you indexed."/>
		<param name="convert_rna" type="boolean" truevalue="convert_rna_true" falsevalue="convert_rna_false" checked="false" label="Convert RNA to DNA alphabet (to map against genome)"/>
		<param name="remove_non_atcgun" type="boolean" truevalue="remove_non_atcgun_true" falsevalue="remove_non_atcgun_false" checked="false" label="Remove reads with non-standard nucleotides" help="Remove all entries that have a sequence that contains letters other than a,c,g,t,u,n,A,C,G,T,U,N"/>
		<param name="adapter_seq" value="" type="text" optional="true" label="Clip 3' Adapter Sequence (optional)" help="Adapter Sequence can only contain a,c,g,t,u,n,A,C,G,T,U,N">
			<validator type="regex" message="Adapter can ONLY contain a,c,g,t,u,n,A,C,G,T,U,N">^[ACGTUacgtu]+$</validator>
		</param>
		<param name="discard_short_reads" value="17" type="integer" optional="false" label="Discard reads shorter than this length (0 for keeping all reads)" help="Note that miRDeep2 requires no reads under 17 in length">
			<validator type="in_range" min="0" message="Minimum value is 0"/>
		</param>
		<param name="collapse_reads" type="boolean" truevalue="Collapsed Reads Fasta" falsevalue="Fasta" checked="true" label="Collapse identical reads into one read with count information in sequence header (default)"/>
		<param name="map_mismatch" type="boolean" truevalue="map_mismatch_true" falsevalue="map_mismatch_false" checked="false" label="Map with one mismatch in the seed (mapping takes longer)"/>
		<param name="map_threshold" value="5" type="integer" optional="false" label="A read is allowed to map up to this number of positions in the genome">
			<validator type="in_range" min="1" message="Minimum value is 1"/>
		</param>
	</inputs>
	<outputs>
		<data format="fasta" name="output_fasta" label="$collapse_reads of ${tool.name} on ${on_string}"/>
		<data format="arf" name="output_arf" label="Mapping output of ${tool.name} on ${on_string} in ARF format"/>
	</outputs>
</tool>

