<tool id="X_PlotTabler" name="Lattice read count maps">
	<description></description>
	<command>python /home/galaxy/galaxy-dist/tools/chrisTools/smRplotTabler.py $input $minquery $maxquery $output
                                      #if $refGenomeSource.genomeSource == "history":
                                        $refGenomeSource.ownFile
                                        --do_not_extract_index
                                      #else:
                                        $refGenomeSource.index
                                        --extract_index
                                      #end if
                                      ;bash /home/galaxy/galaxy-dist/tools/chrisTools/r_wrapper.sh $Rplotter
       </command>
	<inputs>
          <conditional name="refGenomeSource">
             <param name="genomeSource" type="select" label="Will you select a reference genome from your history or use a built-in index?" help="Built-ins were indexed using default options">
               <option value="indexed">Use a built-in index</option>
               <option value="history">Use one from the history</option>
             </param>
             <when value="indexed">
               <param name="index" type="select" label="Select the reference genome used for the bowtie output" help="if your genome of interest is not listed - contact Christophe Antoniewski at drosofff@gmail.com">
                 <options from_data_table="ged_bowtie_indexes"></options>
               </param>
             </when>
             <when value="history">
                <param name="ownFile" type="data" format="fasta"  label="Select the fasta reference" />
             </when>
          </conditional>  <!-- refGenomeSource -->
       		<param name="input" type="data" format="tabular" label="Compute read map from this bowtie standard output"/>
		<param name="minquery" type="integer" size="3" value="15" label="Min size of query small RNAs" help="'15' = 15 nucleotides"/>
		<param name="maxquery" type="integer" size="3" value="30" label="Max size of query small RNAs" help="'30' = 30 nucleotides"/>
                <param name="title" type="text" size="15" value="Lattice Read Maps" label="Main Titles"/>
                <param name="xlabel" type="text" size="15" value="Coordinates" label="x axis label"/>
                <param name="ylabel" type="text" size="15" value="Number of reads" label="y axis label"/>
                <param name="minCount" type="text" size="9" value="100" label="Exclude items with total read counts under the value"/>
                <param name="maxCount" type="text" size="9" value="1000000" label="Exclude items with total read counts above the value"/>
                <param name="Ymax" type="text" size="9" value="1000" label="count scale - forward reads"/>
                <param name="Ymin" type="text" size="9" value="1000" label="count scale - reverse reads"/>
                <param name="StripCex" type="text" size="4" value="0.75" label="strip cex" help="Adapt size of the strip legends using this parameter"/>
                <param name="lwd" type="text" size="4" value="1" label="lwd" help="Adapt line width using this parameter"/>
                <param name="norm" type="text" size="4" value="1" label="Normalisation factor" help="To normalize read counts to a size factor (for Anahi)"/>
	</inputs>

  <configfiles>
    <configfile name="Rplotter">
      ## Setup R error handling to go to stderr
      options( show.error.messages=F,
               error = function () { cat( geterrmessage(), file=stderr() ); q( "no", 1, F ) } )
      data = read.delim("${output}", header=TRUE)
      ## filtering data
      data = data[data\$itemcount &gt; ${minCount}, ]
      data = data[data\$itemcount &lt; ${maxCount}, ]
      library(lattice)
      ## Open output PDF file
      data\$count = data\$count * ${norm}
      pdf( "${finaloutput}" )
      xyplot(count~coord|gene, data=data, group=polarity,
        type="h", lwd=${lwd}, col=c("red","blue"),
        ylim =c(-${Ymin},${Ymax}), as.table=T,
        main = "${title}",
        xlab = "${xlabel}",
        ylab = "${ylabel}",
        strip=strip.custom(which.given=1, bg="lightblue"),
        par.strip.text=list(cex=${StripCex})
        )
      ## Close the PDF file
      devname = dev.off()
    </configfile>
  </configfiles>

	<outputs>
		<data name="output" format="tabular" label="Lattice read count dataframe for maps"/>
                <data name="finaloutput" format="pdf" label="Lattice read count map(s)"/>
	</outputs>
	<help>

**What it does**

This tool prepares a data frame for read mapping using R Lattice.
Then the data frame is plotted using R and the Lattice package.
The numerical options set the min and max size of the smRNAs to be plotted (to filter for instance for a siRNA or piRNA map)

*Exclude items with total read counts above or under the value:*

When you are working with a collection of items (genes, transposons, etc...), the tool plots a map for each item in a lattice structure. If your collection contains many items, the lattice may
get crowded. The two boxes allow to remove from the analysis and from the lattice the items with a low and/or a high number of matched reads. 

The strip cex box controles the size of the font in the blue lattice strips. If you have a lot of items in your lattice, try to reduce the strip cex value.

The lwd box controles the width of the red and blue lines.

The others parameters are self-explanatory.

	</help>
</tool>
